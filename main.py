class Animal:
    _my_zoo = []

    def __init__(self, name, age):
        self.name = name
        self.age = age
        Animal._my_zoo.append(self)

    @classmethod
    def fn(cls, name):  # –Ω–∞–π—Ç–∏ —Ç–≤–∞—Ä—å –ø–æ –∏–º–µ–Ω–∏
        return next((animal for animal in cls._my_zoo if animal.name == name), None)

    @classmethod
    def view_zoo(cls):
        print(format(" –°–ø–∏—Å–æ–∫ –∂–∏–≤–æ—Ç–Ω—ã—Ö: ", "-^65"))
        for animal in cls._my_zoo:
            print(f'{animal.name:<23} –≤–æ–∑—Ä–∞—Å—Ç {animal.age:>4}.\t', end="")
            animal_sounds(animal)
        print(format(len(cls._my_zoo), "-^65"))

    def delete_animal(self):
        if self in Animal._my_zoo:
            print(f'–£–±–∏—Ç {self.name}')
            Animal._my_zoo.remove(self)
            del self

    def __del__(self):
        if self in Animal._my_zoo:
            Animal._my_zoo.remove(self)

    def make_sound(self):
        print("–ì–æ–≤–æ—Ä–∏—Ç –Ω–µ –ø–æ-—Ä—É—Å—Å–∫–∏!")

    def eat(self):
        print("–ï—Å—Ç!")


class Persons:
    def __init__(self, name):
        self.name = name


class ZooKeeper(Persons):
    def feed_animal(self, animal_name):
        animal = Animal.fn(animal_name.strip())
        if animal:
            print(f"{self.name} –∫–æ—Ä–º–∏—Ç {animal.name} ", end="")
            animal.eat()


class Veterinarian(Persons):
    def heal_animal(self, animal_name):
        animal = Animal.fn(animal_name.strip())
        if animal:
            print(f"{self.name} –ª–µ—á–∏—Ç {animal.name} ")


class Hanter(Persons):
    def slaughter_animal(self, animal_name):
        animal = Animal.fn(animal_name.strip())
        if animal:
            print(f"{self.name} –æ—Ö–æ—Ç–∏—Ç—Å—è –∑–∞ {animal_name} ({animal.age} –ª–µ—Ç) ")
            animal.delete_animal()


class Bird(Animal):
    def make_sound(self):
        print("–ì–æ–≤–æ—Ä–∏—Ç –Ω–∞ –ø—Ç–∏—á—å–µ–º —è–∑—ã–∫–µ")


class Mammal(Animal):
    def make_sound(self):
        print("–ß—Ç–æ-—Ç–æ –±–ª–µ–µ—Ç")


class Reptile(Animal):
    def make_sound(self):
        print("–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞—Å—Ç—å –º–æ–ª—á–∞")


def animal_sounds(animal):
    animal.make_sound()

# –°–æ–∑–¥–∞–µ–º –∑–æ–æ–ø–∞—Ä–∫
zoopark = [Animal("–°—Ç–æ—Ä–æ–∂ –ü–µ—Ç—Ä–æ–≤–∏—á", 100), Bird("–ø—Ä–æ—Å—Ç–æ –ü–µ—Ç—É—Ö", 1), Mammal("–û–≤—Ü–∞ –ù–∞–¥—è", 3),
           Reptile("–ê–ª–ª–∏–≥–∞—Ç–æ—Ä –ì–µ–Ω–Ω–∞–¥–∏–π", 20), Bird("–ü–∞–≤–ª–∏–Ω –ú–∞–≤–ª–∏–Ω", 4), Reptile("–í–∞—Ä–∞–Ω –ê–±—Ä–∞–º –ì–µ–Ω—Ä–∏—Ö–æ–≤–∏—á", 31)]

print(zoopark[2].name, end=" - ")
zoopark[2].eat()

zoopark.append(Mammal("–ë–∞—Ä–∞–Ω –õ—é–¥–æ–≤–∏–≥", 4))
print('–î–æ–±–∞–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é', zoopark[-1].name)

zoopark = None

vt=Veterinarian("–ü–∏–ª—é–ª—å–∫–∏–Ω")
hunter = Hanter("–ò–≤–∞–Ω –û—Ö–æ—Ç–Ω–∏–∫")
hunter.slaughter_animal('–û–≤—Ü–∞ –ù–∞–¥—è')
Animal.view_zoo()
vt.heal_animal('–°—Ç–æ—Ä–æ–∂ –ü–µ—Ç—Ä–æ–≤–∏—á')
input("\nüòÄ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞")
